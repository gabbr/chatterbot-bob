<%@ page contentType="text/xml; charset=UTF-8" pageEncoding="UTF-8"
	import="it.unibz.lib.bob.chatterbot.MySQL,it.unibz.lib.bob.chatterbot.DateTimeCheck"
	language="java"%><%!String unmaskPostRequest(String str) {
		// Please ensure that NO additional whitespace character is generated by this JSP
		// (otherwise the resulting XML can not be parsed correctly)	
		str = str.replaceAll("#26", "&");
		str = str.replaceAll("#25", "%");
		return str;
	}%><%
	response.setContentType("text/xml;charset=UTF-8");
	// Set to expire far in the past. 
	response.setHeader("Expires", "Sat, 6 May 1995 12:00:00 GMT");
	// Set standard HTTP/1.1 no-cache headers. 
	response.setHeader("Cache-Control",
			"no-store, no-cache, must-revalidate");
	// Set IE extended HTTP/1.1 no-cache headers (use addHeader). 
	response.addHeader("Cache-Control", "post-check=0, pre-check=0");
	// Set standard HTTP/1.0 no-cache header. 
	response.setHeader("Pragma", "no-cache");
	// ?? needed?
	response.setDateHeader("Last-Modified", System.currentTimeMillis());
%><%@page import="it.unibz.lib.bob.chatterbot.BobString"%><jsp:useBean id="logFile" scope="application" class="it.unibz.lib.bob.chatterbot.LogFile" /><jsp:useBean id="db" scope="application" class="it.unibz.lib.bob.chatterbot.MySQL" /><jsp:useBean id="dm" scope="session" class="it.unibz.lib.bob.check.DialogueManager"><%
		// identify this session in log-files
			dm.setSessionID(session.getId());
			//boolean issueGreeting = true;

			String last = ((request.getParameter("last") != null && !request
					.getParameter("last").equals("")) ? request
					.getParameter("last") : "0");

			String name2 = (request.getParameter("name") != null && !request
					.getParameter("name").equals("")) ? request
					.getParameter("name") : "";

			if ("0".equals(last) && !name2.equals("rating")) {
				// if getChat.jsp is called without the lang parameter, default to EN
				String lang = null;
				if (request.getParameter("lang") == null
						|| request.getParameter("lang").equals("")) {
					System.err
							.println("ERROR: getChat.jsp called for new session WITHOUT lang set. Defaulting to IT.");
					lang = "IT";
				} else {
					lang = request.getParameter("lang");
				}

				String greeting;
				String currentBeginDialogueKeyword = "--BEGIN-DIALOGUE--";
				if (DateTimeCheck.isMorning()) {
					currentBeginDialogueKeyword = "--BEGIN-DIALOGUE-MORNING--";
				}
				if (DateTimeCheck.isMidday()) {
					// keep default greeting
				}
				if (DateTimeCheck.isEvening()) {
					currentBeginDialogueKeyword = "--BEGIN-DIALOGUE-EVENING--";
				}

				try {
					greeting = dm.getNextResponse(
							unmaskPostRequest(currentBeginDialogueKeyword),
							lang);
				} catch (Exception e) {

					System.err
							.println("Exception in DialogueManager with lang="
									+ request.getParameter("lang"));
					System.err.println(e.toString());
					greeting = null;
				}

				if (greeting != null) {
					db.query_AddNewMessageToDB(session.getId(), "BoB",
							greeting, lang);
				}
			}
	%></jsp:useBean><%
	// If RESET was pressed, delete messages from this chat session from the DB
	//issueGreeting = false;
	if (request.getParameter("action") != null
			&& request.getParameter("action").equals("reset")) {
		//logFile.saveDialogue(MySQL.getXmlChatLog(db.query_GetNewMessagesFromDB(session.getId(), "21", "0")));
		db.query_ResetDB(session.getId());
		// reset dialogue history
		dm.resetDialogue();
	}

	// If reloadTT was pressed, reload TT and abbrev files in DM
	if (request.getParameter("action") != null
			&& request.getParameter("action").equals("reloadTT")) {
		db.query_ResetDB(session.getId());
		dm.reloadTT();
	}

	// Did the user write a new message? Then store it in the DB.
	// name must not be empty.
	if (request.getParameter("message") != null
			&& !request.getParameter("message").equals("")
			&& request.getParameter("name") != null
			&& !request.getParameter("name").equals("")
			&& request.getParameter("lang") != null
			&& !request.getParameter("lang").equals("")) {

		// prevent displaying a greeting to this user if the session timed out between
		// this and their previous message.
		//session.setAttribute("sessionGotGreeted", "1");

		// handle IE6, IE7 screwing up UTF8 input for Umlauts
		String inputQuery = request.getParameter("message");
		//truncate rogue query
		if (inputQuery.length() > 200) {
			inputQuery = inputQuery.substring(0, 200);
		}

		String iQu8 = "";
		if (request.getCharacterEncoding() == null) {
			iQu8 = new String(inputQuery.getBytes("8859_1"), "utf-8");
		} else {
			iQu8 = inputQuery;
		}

		db.query_AddNewMessageToDB(session.getId(), request
				.getParameter("name"), unmaskPostRequest(iQu8), request
				.getParameter("lang"));

		// Pass user utterance to IQA system, and get a system response.
		if (!request.getParameter("name").equals("rating")) {

			String sysResponse;
			try {
				sysResponse = dm.getNextResponse(
						unmaskPostRequest(iQu8), request
								.getParameter("lang"));
			} catch (Exception e) {

				System.err
						.println("Exception in DialogueManager with message="
								+ iQu8
								+ " and lang="
								+ request.getParameter("lang"));
				e.printStackTrace();
				sysResponse = "Oops, could you repeat your question, please?";
			}

			// activate HTML links in the sysResponse
			sysResponse = BobString.makeHtmlLinks(sysResponse);
			// System.out.println("Asking Bob : " + unmaskPostRequest(request.getParameter("message")));
			// Add the system response to the DB.
			db.query_AddNewMessageToDB(session.getId(), "BoB",
					sysResponse, request.getParameter("lang"));
		}
	}

	// Generate XML with all new messages from the DB
	String last2 = ((request.getParameter("last") != null && !request
			.getParameter("last").equals("")) ? request
			.getParameter("last") : "0");
	// signal communication with server:
	//System.out.print(".");
	//DEBUG: check xalan env
	//boolean environmentOK = (new EnvironmentCheck()).checkEnvironment (null);

	out.println(MySQL.getDocumentAsXml(db.query_GetNewMessagesFromDB(
			session.getId(), last2)));
%>